"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[6806],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),a=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=a(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},b=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=a(r),m=n,d=b["".concat(s,".").concat(m)]||b[m]||u[m]||i;return r?o.createElement(d,c(c({ref:t},p),{},{components:r})):o.createElement(d,c({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,c=new Array(i);c[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var a=2;a<i;a++)c[a]=r[a];return o.createElement.apply(null,c)}return o.createElement.apply(null,r)}b.displayName="MDXCreateElement"},3562:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return a},toc:function(){return p},default:function(){return b}});var o=r(7462),n=r(3366),i=(r(7294),r(3905)),c=["components"],l={id:"robolectric",title:"Robolectric",sidebar_label:"Robolectric",slug:"robolectric.html"},s=void 0,a={unversionedId:"extensions/robolectric",id:"extensions/robolectric",isDocsHomePage:!1,title:"Robolectric",description:"Robolectric",source:"@site/docs/extensions/roboelectric.md",sourceDirName:"extensions",slug:"/extensions/robolectric.html",permalink:"/docs/extensions/robolectric.html",editUrl:"https://github.com/kotest/kotest/blob/master/documentation/docs/extensions/roboelectric.md",tags:[],version:"current",frontMatter:{id:"robolectric",title:"Robolectric",sidebar_label:"Robolectric",slug:"robolectric.html"},sidebar:"extensions",previous:{title:"WireMock",permalink:"/docs/extensions/wiremock.html"},next:{title:"Pitest",permalink:"/docs/extensions/pitest.html"}},p=[{value:"Robolectric",id:"robolectric",children:[],level:2}],u={toc:p};function b(e){var t=e.components,r=(0,n.Z)(e,c);return(0,i.kt)("wrapper",(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"robolectric"},"Robolectric"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://search.maven.org/artifact/io.kotest.extensions/kotest-extensions-robolectric"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/maven-central/v/io.kotest.extensions/kotest-extensions-robolectric",alt:"Latest Release"}))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"http://robolectric.org/"},"Robolectric")," can be used with Kotest through the ",(0,i.kt)("inlineCode",{parentName:"p"},"RobolectricExtension")," which can be found in a separate repository,",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kotest/kotest-extensions-robolectric"},"kotest-extensions-robolectric")),(0,i.kt)("p",null,"To add this module to project you need specify following in your ",(0,i.kt)("inlineCode",{parentName:"p"},"build.gradle"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'testImplementation("io.kotest.extensions:kotest-extensions-robolectric:${version}")\n')),(0,i.kt)("p",null,"This dependency brings in ",(0,i.kt)("inlineCode",{parentName:"p"},"RobolectricExtension"),", which is autoregistered to your projects."),(0,i.kt)("p",null,"Now all you need to do is annotate Robolectric specs with ",(0,i.kt)("inlineCode",{parentName:"p"},"@RobolectricTest")," and you're set!"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'@RobolectricTest\nclass MyTest : ShouldSpec({\n    should("Access Robolectric normally!") {\n\n    }\n})\n')))}b.isMDXComponent=!0}}]);